{"version":3,"sources":["components/Navbar/index.js","components/Jumbotron/index.js","components/CharCard/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["styles","navbarStyle","justifyContent","Navbar","props","displayText","score","style","className","href","Jumbotron","CharCard","handleClick","image","onClick","alt","name","src","Wrapper","children","App","state","images","clickedImages","checkImage","imageId","indexOf","setState","newClickedImage","sort","change","Math","random","length","setTimeout","this","map","key","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+kEAGMA,G,MAAS,CACXC,YAAa,CAEXC,eAAgB,mBAkBPC,MAdf,SAAgBC,GAAQ,IACZC,EAAuBD,EAAvBC,YAAaC,EAAUF,EAAVE,MAGrB,OAEE,yBAAKC,MAAOP,EAAOC,YAAaO,UAAU,qBACxC,uBAAGA,UAAU,eAAeC,KAAK,KAAI,8BAAM,+CAC3C,wBAAID,UAAU,cAAcH,GAC5B,wBAAIG,UAAU,cAAd,UAAmCF,K,MCL5BI,MAXf,WACE,OACE,yBAAKF,UAAU,6BACb,yBAAKA,UAAU,aACf,wBAAIA,UAAU,yBAAd,gBACA,uBAAGA,UAAU,oBAAb,+E,MCQSG,MAbf,SAAkBP,GAAQ,IAChBQ,EAAuBR,EAAvBQ,YAAaC,EAAUT,EAAVS,MACrB,OAEI,yBAAKL,UAAU,OAAOM,QAASF,GAC7B,yBAAKJ,UAAU,iBACb,yBAAKO,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMA,W,aCF5BK,MAJf,SAAiBd,GACb,OAAO,yBAAKI,UAAU,WAAWJ,EAAMe,WCgI5BC,E,4MA3HbC,MAAQ,CACNC,OAAQA,EACRC,cAAe,GACfjB,MAAO,EACPD,YAAa,I,EAEfmB,WAAa,SAACC,GAIZ,IAAMF,EAAgB,EAAKF,MAAME,cACjC,IAAwC,IAApCA,EAAcG,QAAQD,GAGxB,EAAKE,SAAS,CACZtB,YAAa,0BACbC,MAAO,EACPiB,cAAe,SAGd,CAGH,IAAMK,EAAe,sBAAOL,GAAP,CAAsBE,IAC3C,EAAKE,SAAS,CACZrB,MAAO,EAAKe,MAAMf,MAAQ,EAC1BiB,cAAeK,EACfvB,YAAa,0BAIjB,EAAKsB,SAAS,CACZL,OAAQA,EAAOO,MAAK,SAAChB,GACnB,IAAMiB,EAASC,KAAKC,SACpB,OAAIF,EAAS,GACJ,EAELA,EAAS,IACH,EAEH,OAGP,EAAKT,MAAMC,OAAOW,SAAWV,EAAcU,QAG7C,EAAKN,SAAS,CACZJ,cAAe,KAGnBW,YAAW,WACT,EAAKP,SAAS,CACZtB,YAAa,OAEd,M,uDAEK,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CAAQC,MAAO6B,KAAKd,MAAMf,MAAOD,YAAa8B,KAAKd,MAAMhB,cACzD,kBAAC,EAAD,MACA,kBAAC,EAAD,KAEG8B,KAAKd,MAAMC,OAAOc,KAAI,SAAAvB,GAAK,OAC1B,kBAAC,EAAD,CAAUwB,IAAKxB,EAAMyB,GAAI1B,YAAa,kBAAM,EAAKY,WAAWX,EAAMyB,KAAKzB,MAAOA,a,GAjExE0B,IAAMC,WCJxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3ba302ad.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Navbar.css\";\n\nconst styles = {\n    navbarStyle: {\n      // background: \"green\",\n      justifyContent: \"space-between\"//flex-end: items are packed toward to end line https://css-tricks.com/almanac/properties/j/justify-content/\n    }\n};\n\nfunction Navbar(props) {\n    const { displayText, score } = props; \n    \n\n    return (\n\n      <nav style={styles.navbarStyle} className=\"navbar sticky-top\">\n        <a className=\"navbar-brand\" href=\"#\"><span><h2>Bob's Burgers</h2></span></a>\n        <h2 className=\"text-white\">{displayText}</h2>\n        <h2 className=\"text-white\">Score: {score}</h2>\n      </nav>\n    );\n}\n  \nexport default Navbar;","import React from \"react\";\nimport \"./Jumbotron.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n      <h1 className=\"display-3 text-center\">Clicky Game!</h1>\n      <p className=\"lead text-center\">Click on an image to earn points, but don't click on any more than once!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./CharCard.css\";\n\nfunction CharCard(props) {\n  const { handleClick, image } = props;\n  return (\n    \n      <div className=\"card\" onClick={handleClick}>\n        <div className=\"img-container\">\n          <img alt={image.name} src={image.image} />\n        </div>\n      </div>\n    \n  );\n}\n\nexport default CharCard;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">{props.children}</div>;\n}\n  \nexport default Wrapper;","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport CharCard from \"./components/CharCard\";\nimport images from './images.json';\nimport Wrapper from \"./components/Wrapper\";\n\n\nclass App extends React.Component {\n  state = {\n    images: images,\n    clickedImages: [],\n    score: 0,\n    displayText: ''\n  }\n  checkImage = (imageId) => {\n    // check if the image has been click already\n    // shuffle the images after\n   \n    const clickedImages = this.state.clickedImages;\n    if (clickedImages.indexOf(imageId) !== -1) {\n      // the image has already been clicked\n      // alert the user\n      this.setState({\n        displayText: 'You guessed incorrectly',\n        score: 0,\n        clickedImages: []\n      })\n    }\n    else {\n      // the image has not been clicked on\n      // add the image to clickedImages\n      const newClickedImage = [...clickedImages, imageId]\n      this.setState({\n        score: this.state.score + 1,\n        clickedImages: newClickedImage,\n        displayText: 'You guessed correctly'\n      })\n      \n    }\n    this.setState({\n      images: images.sort((image) => {\n        const change = Math.random();\n        if (change > 0.5) {\n          return 1;\n        }\n        if (change < 0.5) {\n          return -1;\n        }\n        return 0;\n      })\n    })\n    if (this.state.images.length === clickedImages.length) {\n      // all of the images have been clicked on\n      // make clickedImages an empty array\n      this.setState({\n        clickedImages: [],\n      });\n    }\n    setTimeout(() => {\n      this.setState({\n        displayText: ''\n      })\n    }, 2000);\n  }\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.score} displayText={this.state.displayText} />\n        <Jumbotron />\n        <Wrapper>\n          \n          {this.state.images.map(image => (\n            <CharCard key={image.id} handleClick={() => this.checkImage(image.id)} image={image}/>\n          ))}\n\n        </Wrapper>\n\n      \n        \n      </div>\n    )\n  }\n  // {images.map(image => (\n  //   <CharCard image={image} />\n  //  )}\n  // return (\n  //   <div>\n  //     <Navbar />\n  //     <Jumbotron />\n  //     <Wrapper>\n  //       <CharCard \n  //       image={images[0].image}\n  //       />\n  //       <CharCard \n  //       image={images[1].image}\n  //       />\n  //       <CharCard \n  //       image={images[2].image}\n  //       />\n  //       <CharCard \n  //       image={images[3].image}\n  //       />\n  //       <CharCard \n  //       image={images[4].image}\n  //       />\n  //       <CharCard \n  //       image={images[5].image}\n  //       />\n  //       <CharCard \n  //       image={images[6].image}\n  //       />\n  //       <CharCard \n  //       image={images[7].image}\n  //       />\n  //       <CharCard \n  //       image={images[8].image}\n  //       />\n  //       <CharCard \n  //       image={images[9].image}\n  //       />\n  //       <CharCard \n  //       image={images[10].image}\n  //       />\n  //       <CharCard \n  //       image={images[11].image}\n  //       />\n  //     </Wrapper>\n  //   </div>\n  // );\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}